В папке src лежат два модуля и файл index.js объединяющий эти модули. Модули написаны на синтаксисе ES6, поэтому если мы подключим файл index.js в верстку и попытаемся запустить, то браузер выдаст ошибку
это связано с тем что браузер не понимает синтаксис ES6. Поэтому к нам на помощь придет модуль бандлер webpack. Webpack может делать кучу разных классных вещей с js но основное его назначение это работа с модулями
(он является модуль бандлером). Для начала устанавливаем webpack и утилиту webpack-cli далее в package.json в npm скрипт прописываем "build": "webpack --output ./dist/bundle.js". Далее чтобы вызвать npm скрипт вводим
в консоль npm run build. Webpack-бындлер смотрит точку входа (по умолчанию это index.js) вызывает все модули и в итоге склеивает все в один файл bundle.js который сознается по тому пути который прописан в npm скрипте.
Теперь каждый раз когда будет вносить изменнения в модули или создавать новые надо вызывать скрипт заново чтобы изменения вступили в силу.
Есть альтернатива этому способу при помощи gulp склеиваем модули в один файл ("точка входа" в этом случае она может называться как угодно). Причем каждый модуль надо заключать в самовызывающуюся функцию. Важно взять за привычку
ставить точку с запятой перед каждой такой функцией чтобы при склейке предыдущее выражение точно было завершено. Но можно вместо этого в настройках к плагину поставить символ с которого будет начинаться каждая строка.
Но если мы сейчас в один из модулей напишем код на синтаксисе ES6 то браузер так же это не поймет. Чтобы этого не допустить надо преобразовать код для этого потребуется babel который преобразует практически все возможности из ES6/7 в ES5
за исключением импортов и экспортов. Подключим плагин babel в gulp. Теперь в точке входа будет преобразованый код!